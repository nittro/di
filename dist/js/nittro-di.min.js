_context.invoke("Nittro.DI",function(undefined){var ServiceDefinition=_context.extend(function(factory,args,setup,run){this._={factory:factory,args:args||{},setup:setup||[],run:!!run}},{getFactory:function(){return this._.factory},setFactory:function(factory,args){return this._.factory=factory,args!==undefined&&(this._.args=args),this},getArguments:function(){return this._.args},setArguments:function(args){return this._.args=args,this},getSetup:function(){return this._.setup},hasSetup:function(){return this._.setup.length>0},addSetup:function(callback){return this._.setup.push(callback),this},setRun:function(state){return this._.run=state===undefined||!!state,this},isRun:function(){return this._.run}});_context.register(ServiceDefinition,"ServiceDefinition")}),_context.invoke("Nittro.DI",function(Nittro,ReflectionClass,ReflectionFunction,Arrays,Strings,HashMap,Neon,NeonEntity,ServiceDefinition,undefined){var prepare=function(self){self._||(self._={}),self._.services||(self._.services={},self._.serviceDefs={})},ContainerMixin={addService:function(name,service){if(prepare(this),this._.services[name]||this._.serviceDefs[name])throw new Error('Container already has a service named "'+name+'"');return this._.services[name]=service,this},addServiceDefinition:function(name,definition,override){if(prepare(this),!override&&(this._.services[name]||this._.serviceDefs[name]))throw new Error('Container already has a service named "'+name+'"');return this._.serviceDefs[name]=definition,this},hasServiceDefinition:function(name){return prepare(this),this._.serviceDefs[name]!==undefined},getServiceDefinition:function(name){if(prepare(this),!this._.serviceDefs[name])throw new Error('Container has no service "'+name+'"');return"string"==typeof this._.serviceDefs[name]?this._.serviceDefs[name]=new ServiceDefinition(this._.serviceDefs[name].replace(/!$/,""),null,null,(!!this._.serviceDefs[name].match(/!$/))):"function"==typeof this._.serviceDefs[name]?this._.serviceDefs[name]=new ServiceDefinition(this._.serviceDefs[name]):this._.serviceDefs[name]instanceof ServiceDefinition||(this._.serviceDefs[name]=new ServiceDefinition(this._.serviceDefs[name].factory,this._.serviceDefs[name].args,this._.serviceDefs[name].setup,this._.serviceDefs[name].run)),this._.serviceDefs[name]},getService:function(name){if(prepare(this),"container"===name)return this;if(this._.services[name]===undefined){if(!this._.serviceDefs[name])throw new Error('Container has no service named "'+name+'"');this._createService(name)}return this._.services[name]},hasService:function(name){return prepare(this),"container"===name||this._.services[name]!==undefined||this._.serviceDefs[name]!==undefined},isServiceCreated:function(name){if(!this.hasService(name))throw new Error('Container has no service named "'+name+'"');return!!this._.services[name]},runServices:function(){prepare(this);var name,def;for(name in this._.serviceDefs)def=this.getServiceDefinition(name),def.isRun()&&this.getService(name)},invoke:function(callback,args,thisArg){return prepare(this),args=this._autowireArguments(callback,args),callback.apply(thisArg||null,this._expandArguments(args))},_createService:function(name){var obj,service,setup,def=this.getServiceDefinition(name),factory=def.getFactory();if("function"==typeof factory){if(service=this.invoke(factory,def.getArguments()),!service)throw new Error('Factory failed to create service "'+name+'"')}else if(factory=this._toEntity(factory),service=this._expandEntity(factory,null,def.getArguments()),service===factory)throw new Error('Invalid factory for service "'+name+'"');if(this._.services[name]=service,def.hasSetup()){setup=def.getSetup();for(var i=0;i<setup.length;i++)"function"==typeof setup[i]?this.invoke(setup[i],null,service):(obj=this._toEntity(setup[i]),this._expandEntity(obj,service))}return service},_autowireArguments:function(callback){var i,a,argList=ReflectionFunction.from(callback).getArgs(),args=Arrays.createFrom(arguments,1).filter(function(arg){return!!arg}).map(function(arg){return arg instanceof HashMap?arg.isList()&&(arg=HashMap.from(arg.getValues(),argList)):arg=HashMap.from(arg,argList),arg});lookupArg:for(i=0;i<argList.length;i++){for(a=args.length-1;a>=0;a--){if(args[a].has(argList[i])){argList[i]=args[a].get(argList[i]);continue lookupArg}if(args[a].has(i)){argList[i]=args[a].get(i);continue lookupArg}}{if(!this.hasService(argList[i]))throw new Error('Cannot autowire argument "'+argList[i]+'" of function');argList[i]=this.getService(argList[i])}}return argList},_expandArguments:function(args){for(var i=0;i<args.length;i++)args[i]=this._expandArg(args[i]);return args},_expandArg:function(arg){return arg instanceof NeonEntity?this._expandEntity(arg):"string"==typeof arg&&arg.match(/^@\S+$/)?this.getService(arg.substr(1)):arg},_toEntity:function(str){var m=str.match(/^([^\(]+)\((.*)\)$/);return m?new NeonEntity(m[1],Neon.decode("["+m[2]+"]")):new NeonEntity(str,new HashMap)},_expandEntity:function(entity,context,mergeArgs){var m,obj,method,args;if(m=entity.value.match(/^(?:(@)?([^:].*?))?(?:::(.+))?$/)){if(m[2])obj=m[1]?this.getService(m[2]):ReflectionClass.getClass(m[2]);else{if(!context)throw new Error("No context for calling "+entity.value+" given");obj=context}if(m[3]!==undefined)return method=m[3],args=this._autowireArguments(obj[method],entity.attributes,mergeArgs),obj[method].apply(obj,this._expandArguments(args));if(m[1]){if(entity.attributes.length)throw new Error('Invalid entity "'+entity.value+'"');return obj}return args=this._autowireArguments(obj,entity.attributes,mergeArgs),ReflectionClass.from(obj).newInstanceArgs(this._expandArguments(args))}return entity}};_context.register(ContainerMixin,"ContainerMixin")},{ReflectionClass:"Utils.ReflectionClass",ReflectionFunction:"Utils.ReflectionFunction",Arrays:"Utils.Arrays",Strings:"Utils.Strings",HashMap:"Utils.HashMap",Neon:"Nittro.Neon.Neon",NeonEntity:"Nittro.Neon.NeonEntity"}),_context.invoke("Nittro.DI",function(ContainerMixin,Arrays,HashMap,ReflectionClass,NeonEntity,undefined){function traverse(cursor,path,create){"string"==typeof path&&(path=path.split(/\./g));var i,p,n=path.length;for(i=0;i<n;i++){if(p=path[i],Array.isArray(cursor)&&p.match(/^\d+$/)&&(p=parseInt(p)),cursor[p]===undefined){if(!create)return undefined;cursor[p]={}}cursor=cursor[p]}return cursor}var Container=_context.extend(function(config){config||(config={}),this._={params:Arrays.mergeTree({},config.params||null),serviceDefs:Arrays.mergeTree({},config.services||null),services:{},factories:Arrays.mergeTree({},config.factories||null)}},{hasParam:function(name){return traverse(this._.params,name)!==undefined},getParam:function(name,def){var value=traverse(this._.params,name);return value!==undefined?value:def!==undefined?def:null},setParam:function(name,value){name=name.split(/\./g);var p=name.pop(),cursor=this._.params;return name.length&&(cursor=traverse(cursor,name,!0)),Array.isArray(cursor)&&p.match(/^\d+$/)&&(p=parseInt(p)),cursor[p]=value,this},hasFactory:function(name){return this._.factories[name]!==undefined},addFactory:function(name,factory,params){return"string"==typeof factory?this._.factories[name]=factory:this._.factories[name]={callback:factory,params:params||null},this},create:function(name,args){if(!this.hasFactory(name))throw new Error('No factory named "'+name+'" has been registered');var factory=this._.factories[name];return"string"==typeof factory?this._.factories[name]=factory=this._toEntity(factory):factory.params instanceof HashMap||(factory.params=new HashMap(factory.params)),factory instanceof NeonEntity?this._expandEntity(factory,null,args):(args=this._autowireArguments(factory.callback,factory.params,args),factory.callback.apply(null,this._expandArguments(args)))},_expandArg:function(arg){return"string"==typeof arg&&arg.indexOf("%")>-1?arg.match(/^%[^%]+%$/)?this.getParam(arg.replace(/^%|%$/g,"")):arg.replace(/%([a-z0-9_.-]+)%/gi,function(){return this.getParam(arguments[1])}.bind(this)):this.__expandArg(arg)}});_context.mixin(Container,ContainerMixin,{_expandArg:"__expandArg"}),_context.register(Container,"Container")},{Arrays:"Utils.Arrays",HashMap:"Utils.HashMap",ReflectionClass:"Utils.ReflectionClass",NeonEntity:"Nittro.Neon.NeonEntity"}),_context.invoke("Nittro.DI",function(Arrays){var BuilderExtension=_context.extend(function(containerBuilder,config){this._={containerBuilder:containerBuilder,config:config}},{load:function(){},setup:function(){},_getConfig:function(defaults){return defaults&&(this._.config=Arrays.mergeTree({},defaults,this._.config)),this._.config},_getContainerBuilder:function(){return this._.containerBuilder}});_context.register(BuilderExtension,"BuilderExtension")},{Arrays:"Utils.Arrays"}),_context.invoke("Nittro.DI",function(Container,ContainerMixin,BuilderExtension,undefined){var ContainerBuilder=_context.extend(Container,function(config){config||(config={}),ContainerBuilder.Super.call(this,config),this._.extensions=config.extensions||{}},{addExtension:function(name,extension){if(this._.extensions[name]!==undefined)throw new Error('Container builder already has an extension called "'+name+'"');return this._.extensions[name]=extension,this},createContainer:function(){return this._prepareExtensions(),this._loadExtensions(),this._setupExtensions(),new Container({params:this._.params,services:this._.serviceDefs,factories:this._.factories})},_prepareExtensions:function(){var name,extension;for(name in this._.extensions){if(extension=this._.extensions[name],"function"==typeof extension?extension=this.invoke(extension,{containerBuilder:this,config:this._.params[name]||{}}):"string"==typeof extension&&(extension=this._expandEntity(this._toEntity(extension),null,{containerBuilder:this,config:this._.params[name]||{}})),!(extension instanceof BuilderExtension))throw new Error('Extension "'+name+'" is not an instance of Nittro.DI.BuilderExtension');this._.extensions[name]=extension}},_loadExtensions:function(){for(var name in this._.extensions)this._.extensions[name].load()},_setupExtensions:function(){for(var name in this._.extensions)this._.extensions[name].setup()}});_context.mixin(ContainerBuilder,ContainerMixin),_context.register(ContainerBuilder,"ContainerBuilder")});